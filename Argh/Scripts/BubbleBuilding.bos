//Bubble Building Script

// This script is hereby released under GPL v. 2 or later by Wolfe Games, 2008
// All contents were created by Wolfe Games.

// This Include is absolutely VITAL.  
// You must call it FIRST.  PERIOD.
// Don't say I didn't warn you ;-)
#include "STANDARD_COMMANDS_WORLDBUILDER.h"
//#include "BUILDING_INCLUDES.h"

//Explode Points
piece center, explode_point01, explode_point02, explode_point03, explode_point04, explode_point05, explode_point06, explode_point07, explode_point08;

piece base, base1, base2, base3, pillar, bubble, light1, light2;

#define DEADBUILDING_DUST_FX 1024+1
#define FAST_BLINK_YELLOW 1024+2
#define FAST_BLINK_RED 1024+3

lua_CreateLightMe(arg) { return (0); }
lua_DestroyLightMe(arg) { return (0); }

lights()
{
	var randomWait, randomBlip;
	randomWait = rand(2000,6000);
	randomBlip = rand(60,90);
	while(TRUE)
	{
		call-script lua_CreateLightMe(light1, 255, 255, 0, 32);	
		emit-sfx FAST_BLINK_YELLOW from light1;
		sleep randomBlip;
		call-script lua_CreateLightMe(light2, 255, 0, 0, 32);
		emit-sfx FAST_BLINK_RED from light2;
		sleep randomBlip;
		call-script lua_DestroyLightMe();		
		sleep 500;
		call-script lua_CreateLightMe(light2, 255, 0, 0, 32);		
		emit-sfx FAST_BLINK_RED from light2;
		sleep randomBlip;
		call-script lua_CreateLightMe(light1, 255, 255, 0, 32);		
		emit-sfx FAST_BLINK_YELLOW from light1;
		sleep randomBlip;
		call-script lua_DestroyLightMe();		
		sleep 500;
		call-script lua_CreateLightMe(light1, 255, 255, 0, 32);		
		emit-sfx FAST_BLINK_YELLOW from light1;
		sleep randomBlip;
		call-script lua_CreateLightMe(light2, 255, 0, 0, 32);		
		emit-sfx FAST_BLINK_RED from light2;
		sleep randomBlip;
		call-script lua_DestroyLightMe();		
		sleep 500;
		call-script lua_CreateLightMe(light2, 255, 0, 0, 32);		
		emit-sfx FAST_BLINK_RED from light2;
		sleep randomBlip;
		call-script lua_CreateLightMe(light1, 255, 255, 0, 32);		
		emit-sfx FAST_BLINK_YELLOW from light1;
		sleep randomBlip;
		call-script lua_DestroyLightMe();
		sleep randomWait;		
	}
}

Create()
{
	var RandomTurn, RandomWay;
	RandomTurn = rand(0,360);
	turn base to y-axis RandomTurn * <1> now;
	RandomTurn = rand(3,12);
	RandomWay = rand(1,2);
	if (RandomWay <= 1)
	{
		RandomWay = -1;
	} else {
		RandomWay = 1;
	}
	spin bubble around y-axis speed RandomTurn * <1> * RandomWay;	
	start-script lights();
}

Killed(a,b)
{
	hide center;
	emit-sfx DEADBUILDING_DUST_FX from center;
	explode bubble type FALL;	
	explode base1 type FALL;
	explode base2 type FALL;
	explode base3 type FALL;			
	emit-sfx DEADBUILDING_DUST_FX from explode_point01;
	emit-sfx DEADBUILDING_DUST_FX from explode_point02;
	emit-sfx DEADBUILDING_DUST_FX from explode_point03;
	emit-sfx DEADBUILDING_DUST_FX from explode_point04;
	return (0);
}