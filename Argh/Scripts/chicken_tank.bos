piece base, shell;
piece eye_l1, eye_l2, eye_r1, eye_r2;
piece firepoint1, firepoint2, firepoint3, firepoint4, firepoint5, firepoint6;

static-var isMoving, amMoving, bAiming, lastHit, FirePoint;
#include "STANDARD_COMMANDS_CHICKEN.h"

#define BLOOD_SPRAY 1024
#define BLOOD_EXPLODE 1024+1
#define DIRT 1024+2
#define MECH_STOMP_FX 1024+3

Eyes()
{
	var randomTurn, randomWay2, randomSleep;
	randomSleep = rand(500,1000);
	
	while(TRUE)
	{
		randomTurn = rand(<5>,<20>);
		randomWay2 = rand(1,2);
		if (randomWay2 <= 1)
		{
			randomWay2 = -1;
		} else {
			randomWay2 = 1;
		}
		turn eye_l1 to y-axis randomTurn * randomWay2 speed randomTurn / 4;
		
		randomTurn = rand(<5>,<20>);
		randomWay2 = rand(1,2);
		if (randomWay2 <= 1)
		{
			randomWay2 = -1;
		} else {
			randomWay2 = 1;
		}
		turn eye_l2 to y-axis randomTurn * randomWay2 speed randomTurn / 4;
		
		randomTurn = rand(<5>,<20>);
		randomWay2 = rand(1,2);
		if (randomWay2 <= 1)
		{
			randomWay2 = -1;
		} else {
			randomWay2 = 1;
		}
		turn eye_r1 to y-axis randomTurn * randomWay2 speed randomTurn / 4;
		
		randomTurn = rand(<5>,<20>);
		randomWay2 = rand(1,2);
		if (randomWay2 <= 1)
		{
			randomWay2 = -1;
		} else {
			randomWay2 = 1;
		}
		turn eye_r2 to y-axis randomTurn * randomWay2 speed randomTurn / 4;
		
		sleep randomSleep;						
	}
}

Bob()
{
	var randomX, randomZ, randomDepth, randomWay, randomWait;
	randomWait = rand(750, 1000);
	if (amMoving)
	{
		isMoving = TRUE;
		while(amMoving)
		{
			
			randomX = rand(0,<1.5>);
			randomZ = rand(0,<1.5>);
			
			randomWay = rand(1,2);
			if (randomWay <= 1)
			{
				randomWay = -1;
			} else {
				randomWay = 1;
			}
			turn shell to x-axis randomX * randomWay speed randomX / 4;
			
			randomWay = rand(1,2);
			if (randomWay <= 1)
			{
				randomWay = -1;
			} else {
				randomWay = 1;
			}
			turn shell to z-axis randomZ * randomWay speed randomZ / 4;
	
			sleep randomWait;
		}
	}
	return 0;
}


Halt()
{
	sleep 350;
	if(!amMoving)
	{
		isMoving = FALSE;		
		turn shell to y-axis <0> speed <500>;
		turn shell to x-axis <0> speed <500>;
	}		
}

StartMoving()
{
	amMoving = TRUE;
	if (!isMoving)
	{
		start-script Bob();
	}
}

StopMoving()
{
	amMoving = FALSE;
	start-script Halt();
}
	
AimFromWeapon1(piecenum)
{	
	piecenum=shell;	
}

QueryWeapon1(piecenum)
{	
	if (FirePoint == 1)
	{
		piecenum=firepoint1; 
	}
		if (FirePoint == 2)
	{
		piecenum=firepoint2; 
	}
		if (FirePoint == 3)
	{
		piecenum=firepoint3; 
	}
		if (FirePoint == 4)
	{
		piecenum=firepoint4; 
	}
		if (FirePoint == 5)
	{
		piecenum=firepoint5; 
	}
		if (FirePoint == 6)
	{
		piecenum=firepoint6; 
	}
}

AimWeapon1(heading,pitch)
{
	return(TRUE);
}
	
Shot1()
{
	++FirePoint;
	if (FirePoint > 6)
	{
		FirePoint = 1;
	}
	return 0;
}

HitByWeaponId(z,x,id,damage)
{
	emit-sfx BLOOD_SPRAY from shell;
	emit-sfx BLOOD_SPRAY from firepoint1;
	emit-sfx BLOOD_SPRAY from firepoint2;
	emit-sfx BLOOD_SPRAY from firepoint3;
	emit-sfx BLOOD_SPRAY from firepoint4;
	emit-sfx BLOOD_SPRAY from firepoint5;
	emit-sfx BLOOD_SPRAY from firepoint6;
	return 100;
}

Create()
{
	FirePoint = 1;
	isMoving = FALSE;
	amMoving = FALSE;
	emit-sfx DIRT from shell;
	emit-sfx DIRT from firepoint1;
	emit-sfx DIRT from firepoint2;
	emit-sfx DIRT from firepoint3;
	emit-sfx DIRT from firepoint4;
	emit-sfx DIRT from firepoint5;
	emit-sfx DIRT from firepoint6;
	start-script Eyes();
}	

Killed( severity, corpsetype )
{
	corpsetype = 1;
	emit-sfx BLOOD_EXPLODE from shell;
	emit-sfx BLOOD_EXPLODE from firepoint1;
	emit-sfx BLOOD_EXPLODE from firepoint2;
	emit-sfx BLOOD_EXPLODE from firepoint3;
	emit-sfx BLOOD_EXPLODE from firepoint4;
	emit-sfx BLOOD_EXPLODE from firepoint5;
	emit-sfx BLOOD_EXPLODE from firepoint6;
	return(0);
}