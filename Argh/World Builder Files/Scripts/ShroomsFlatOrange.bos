// Argh's Generic Tree Script

// This script is hereby released under GPL v. 3 or later by Wolfe Games, 2008
// All contents were created by Wolfe Games.

// This Include is absolutely VITAL.  
// You must call it FIRST.  PERIOD.
// Don't say I didn't warn you ;-)
#include "STANDARD_COMMANDS_WORLDBUILDER.h"

piece base, reclaim_symbol;
piece tree01, tree02, tree03, tree04, tree05, tree06;
piece treeproxy01, treeproxy02, treeproxy03, treeproxy04, treeproxy05, treeproxy06;

// SmokeUnit_WORLDBUILDER is a completely optional Include.  It *requires* STANDARD_COMMANDS_WORLDBUILDER.h
// ...to be included (or the code) *BEFORE* you call it.
// And SMOKEPIECE1 through SMOKEPIECE4 MUST BE DEFINED!
// It doesn't matter if they all refer to the same part.
#define SMOKEPIECE1 tree01
#define SMOKEPIECE2 tree02
#define SMOKEPIECE3 tree03
#define SMOKEPIECE4 tree04
#include "SmokeUnit_WORLDBUILDER.h"

#define TREE_EXPLOSION_FX 1024+1
#define RECLAIM_SYMBOL 1024+2

lua_PutDownBlockers(arg) { return (0); }

Placer()
{
var RandomTurn, RandomMoveZ, GroundHeight, RandomMoveX, RandomMoveNegZ, RandomMoveNegX;
/////////////////////////////////////////////////////////////////////////////////////////////////// treeS
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////	
	RandomTurn = rand(0,359);
	turn treeproxy01 to y-axis <1>*RandomTurn now;	
	RandomMoveZ = rand(24,128);
	move tree01 to z-axis [1]*(RandomMoveZ) now;	
	GroundHeight = get GROUND_HEIGHT(get PIECE_XZ(base)) - (get GROUND_HEIGHT(get PIECE_XZ(tree01)));
	if (GroundHeight <= 0)
	{
		move tree01 to y-axis GroundHeight now;	
	}
	if (GroundHeight > 0)
	{
		move tree01 to y-axis 0 - GroundHeight now;
	}			
	
	sleep 1;
	
	RandomTurn = rand(0,359);
	turn treeproxy02 to y-axis <1>*RandomTurn now;	
	RandomMoveZ = rand(24,128);
	move tree02 to z-axis [1]*(RandomMoveZ) now;	
	GroundHeight = get GROUND_HEIGHT(get PIECE_XZ(base)) - (get GROUND_HEIGHT(get PIECE_XZ(tree02)));
	if (GroundHeight <= 0)
	{
		move tree02 to y-axis GroundHeight now;	
	}
	if (GroundHeight > 0)
	{
		move tree02 to y-axis 0 - GroundHeight now;
	}			
	
	sleep 1;
	
	RandomTurn = rand(0,359);
	turn treeproxy03 to y-axis <1>*RandomTurn now;	
	RandomMoveZ = rand(24,128);
	move tree03 to z-axis [1]*(RandomMoveZ) now;	
	GroundHeight = get GROUND_HEIGHT(get PIECE_XZ(base)) - (get GROUND_HEIGHT(get PIECE_XZ(tree03)));
	if (GroundHeight <= 0)
	{
		move tree03 to y-axis GroundHeight now;	
	}
	if (GroundHeight > 0)
	{
		move tree03 to y-axis 0 - GroundHeight now;
	}			
	
	sleep 1;
	
	RandomTurn = rand(0,359);
	turn treeproxy04 to y-axis <1>*RandomTurn now;	
	RandomMoveZ = rand(24,128);
	move tree04 to z-axis [1]*(RandomMoveZ) now;	
	GroundHeight = get GROUND_HEIGHT(get PIECE_XZ(base)) - (get GROUND_HEIGHT(get PIECE_XZ(tree04)));
	if (GroundHeight <= 0)
	{
		move tree04 to y-axis GroundHeight now;	
	}
	if (GroundHeight > 0)
	{
		move tree04 to y-axis 0 - GroundHeight now;
	}			
	
	sleep 1;
	
	RandomTurn = rand(0,359);
	turn treeproxy05 to y-axis <1>*RandomTurn now;	
	RandomMoveZ = rand(24,128);
	move tree05 to z-axis [1]*(RandomMoveZ) now;	
	GroundHeight = get GROUND_HEIGHT(get PIECE_XZ(base)) - (get GROUND_HEIGHT(get PIECE_XZ(tree05)));
	if (GroundHeight <= 0)
	{
		move tree05 to y-axis GroundHeight now;	
	}
	if (GroundHeight > 0)
	{
		move tree05 to y-axis 0 - GroundHeight now;
	}			
	
	sleep 1;
	
	RandomTurn = rand(0,359);
	turn treeproxy06 to y-axis <1>*RandomTurn now;	
	RandomMoveZ = rand(24,128);
	move tree06 to z-axis [1]*(RandomMoveZ) now;	
	GroundHeight = get GROUND_HEIGHT(get PIECE_XZ(base)) - (get GROUND_HEIGHT(get PIECE_XZ(tree06)));
	if (GroundHeight <= 0)
	{
		move tree06 to y-axis GroundHeight now;	
	}
	if (GroundHeight > 0)
	{
		move tree06 to y-axis 0 - GroundHeight now;
	}
	
	sleep 1;		
/////////////////////////////////////////////////////////////////////////////////////////////////// treeS
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
	call-script lua_PutDownBlockers(tree01);
	call-script lua_PutDownBlockers(tree02);
	call-script lua_PutDownBlockers(tree03);
	call-script lua_PutDownBlockers(tree04);
	call-script lua_PutDownBlockers(tree05);
	call-script lua_PutDownBlockers(tree06);	
return (0);
}

ReclaimHere()
{
	while(TRUE)
	{
	emit-sfx RECLAIM_SYMBOL from reclaim_symbol;
	sleep 3000;
	}
}	

Create()
{
	start-script ReclaimHere();
	start-script SmokeUnit_WORLDBUILDER();
	start-script Placer();
}

Killed(severity, corpsetype)
{
	emit-sfx TREE_EXPLOSION_FX from tree01;
	emit-sfx TREE_EXPLOSION_FX from tree02;	
	emit-sfx TREE_EXPLOSION_FX from tree03;	
	emit-sfx TREE_EXPLOSION_FX from tree04;	
	emit-sfx TREE_EXPLOSION_FX from tree05;	
	emit-sfx TREE_EXPLOSION_FX from tree06;					
	turn tree01 to x-axis <-120> speed <60>;
	turn tree02 to x-axis <-120> speed <60>;
	turn tree03 to x-axis <-120> speed <60>;
	turn tree04 to x-axis <-120> speed <60>;
	turn tree05 to x-axis <-120> speed <60>;
	turn tree06 to x-axis <-120> speed <60>;
	wait-for-turn tree01 around x-axis;	
	return (0);
}
